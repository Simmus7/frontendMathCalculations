{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\Final Implementaci\\xF3n e Integraci\\xF3n de Software\\\\Frontend\\\\src\\\\pages\\\\Factorial.js\";\nimport React, { Component } from 'react';\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport axios from 'axios';\nexport default class Factorial extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeN = this.onChangeN.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.didGetResponse = this.didGetResponse.bind(this);\n    this.state = {\n      n: 0,\n      factorial: \"\",\n      didSubmit: false\n    };\n  }\n\n  onChangeN(e) {\n    this.setState({\n      n: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    const toGet = {\n      n: this.state.n\n    };\n    axios.post('https://backend-mathcalculations.herokuapp.com/factorial', toGet).then(res => {\n      if (typeof res.data === 'string') {\n        this.setState({\n          factorial: \"\",\n          didSubmit: true\n        });\n      } else {\n        this.setState({\n          factorial: res.data.n.toString(),\n          didSubmit: true\n        });\n      }\n    });\n  }\n\n  didGetResponse() {\n    if (this.state.didSubmit == true && this.state.factorial != \"\") {\n      let nToPrint = this.state.n;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      }, \"The factorial of \", nToPrint, \" is: \"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"result\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }, this.state.factorial));\n    } else if (this.state.didSubmit == true) {\n      return \"Please enter a valid number (integer between 0 and 20000)\";\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, \"Factorial\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"formgroup-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InputText, {\n      id: \"firstname1\",\n      type: \"text\",\n      placeholder: \"N\",\n      onChange: this.onChangeN,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      label: \"Get factorial!\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }))), this.didGetResponse());\n  }\n\n}","map":{"version":3,"sources":["C:/Users/DELL/Desktop/Final Implementación e Integración de Software/Frontend/src/pages/Factorial.js"],"names":["React","Component","InputText","Button","axios","Factorial","constructor","props","onChangeN","bind","onSubmit","didGetResponse","state","n","factorial","didSubmit","e","setState","target","value","toGet","post","then","res","data","toString","nToPrint","render"],"mappings":"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","sourcesContent":["import React, { Component} from 'react';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Button } from 'primereact/button';\r\nimport axios from 'axios';\r\n\r\nexport default class Factorial extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        \r\n        this.onChangeN = this.onChangeN.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.didGetResponse = this.didGetResponse.bind(this);\r\n        \r\n        this.state = {\r\n            n : 0,\r\n            factorial : \"\",\r\n            didSubmit:false,\r\n            \r\n        }\r\n    }\r\n\r\n    onChangeN(e) {\r\n        this.setState({\r\n          n: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        const toGet = {\r\n            n : this.state.n\r\n          }\r\n          axios\r\n          .post('https://backend-mathcalculations.herokuapp.com/factorial', toGet)\r\n          .then(\r\n              res => {\r\n                  if (typeof res.data === 'string' ){\r\n                    this.setState({\r\n                        factorial: \"\",\r\n                        didSubmit : true\r\n                      })\r\n                  }\r\n                  else {\r\n                    this.setState({\r\n                        factorial: res.data.n.toString(),\r\n                        didSubmit : true\r\n                      })\r\n                  }\r\n              }\r\n          )\r\n    }\r\n\r\n    didGetResponse() {\r\n        if (this.state.didSubmit == true && this.state.factorial != \"\"){\r\n            let nToPrint = this.state.n\r\n            return (<div>\r\n                        <div>The factorial of {nToPrint} is: </div>\r\n                        <br/>\r\n                        <div id=\"result\">{this.state.factorial}</div>\r\n                    </div>\r\n                    )\r\n            \r\n        }\r\n        else if (this.state.didSubmit == true) {\r\n            return \"Please enter a valid number (integer between 0 and 20000)\"\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card\">\r\n            <h5>Factorial</h5>\r\n            <form onSubmit={this.onSubmit}> \r\n                <div className=\"formgroup-inline\">\r\n                    <div className=\"field\">\r\n                        <InputText id=\"firstname1\" type=\"text\" placeholder=\"N\" onChange={this.onChangeN} />\r\n                    </div>\r\n                        <Button label=\"Get factorial!\" type=\"submit\"></Button>\r\n                </div>\r\n                \r\n            </form>\r\n            {this.didGetResponse()}\r\n            \r\n        </div>\r\n        );\r\n    } \r\n}"]},"metadata":{},"sourceType":"module"}